name: Lint and build the documentation

# see https://github.com/actions/setup-python#using-setup-python-with-a-self-hosted-runner
# for artifact handling and SBOM: https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts

on:
  push:
  #pull_request: # Not necessary, as it is already been executed on push
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1"

jobs:
  lint_content_in_repo:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3"
        cache: 'pip' # caching pip dependencies
    - name: print versions for debugging
      run: python --version ; pip --version ; whoami ; pwd
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools
        python -m pip install docutils sphinx-lint vale
    - name: Lint the project with sphinx-lint
      run: |
        sphinx-lint
    - name: Lint the project with vale
      uses: errata-ai/vale-action@v2.1.1
      with:
        # github-pr-check, github-pr-review, github-check
        reporter: github-check


  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3"
        cache: 'pip' # caching pip dependencies
    - name: print versions for debugging
      run: python --version ; pip --version ; whoami ; pwd
    - name: Install graphviz & default-jdk
      run: |
        sudo apt-get update
        sudo apt-get upgrade --yes
        sudo apt-get install graphviz default-jdk
        sudo apt-get upgrade --yes
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools
        python -m pip install -r ./docs/requirements.txt
    - name: Render the documentation
      run: >
        sphinx-build
        -b html ./docs ./public
        -vv
        --jobs=auto
        --show-traceback
        --fail-on-warning
        --keep-going
    - name: Archive sphinx public folder
      uses: actions/upload-artifact@v4
      with:
        name: sphinx-public
        path: |
          ./public/


  # lint final sphinx html files
  lint_final_html_files:
    runs-on: ubuntu-latest
    needs: build
    env:
      PAGES_BRANCH: pages
      GIT_AUTHOR_NAME: ${{github.repository_owner}}
      GIT_AUTHOR_EMAIL: ${{github.repository_owner}}@users.noreply.github.com
      SOURCE_BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Check out ${{github.repository}}
        uses: actions/checkout@v4
        with:
          ref: pages

      - name: create folder for branch pages
        run: |
          echo "${SOURCE_BRANCH_NAME}"
          mkdir -p "${SOURCE_BRANCH_NAME}"
          rm -r -f "${SOURCE_BRANCH_NAME}"/*

      - name: Download sphinx public folder
        uses: actions/download-artifact@v4
        with:
          name: sphinx-public
          path: ./${{ github.head_ref || github.ref_name }}

      # Commit changes, if there are any
      - name: Commit changes, if any
        run: |
          ls -al "${SOURCE_BRANCH_NAME}"
          git status
          git config user.name "${GIT_AUTHOR_NAME}"
          git config user.email "${GIT_AUTHOR_EMAIL}"
          git add .
          git commit \
            -m "Documentation updated for Branch ${SOURCE_BRANCH_NAME} with commit ${{github.repository}}@${{ github.sha }}"

        # Push the branch to the target repository
      - name: Push content to branch pages
        run: |
          git status
          git push -u origin "${PAGES_BRANCH}"

      - name: copy .vale.ini from static part to root folder
        run: |
          cp ./"${SOURCE_BRANCH_NAME}"/_static/vale_for_final_html.ini ./.vale.ini

      - name: Lint the html files with vale
        uses: errata-ai/vale-action@v2.1.1
        with:
          # github-pr-check, github-pr-review, github-check
          reporter: github-check
          files: ./${{ github.head_ref || github.ref_name }}/


  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    # execute deplyment to github pages only on main branch
    steps:
      - name: Download sphinx public folder
        uses: actions/download-artifact@v4
        with:
          name: sphinx-public
          path: ./public/
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
